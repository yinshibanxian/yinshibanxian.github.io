I"<h2 id="maximum-element-in-a-stack"><a href="https://vjudge.net/problem/Gym-102222A">Maximum Element In A Stack</a></h2>

<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
typedef unsigned int uni;
typedef unsigned long long llu;
int t, n, p, q, m, kase;
uni SA, SB, SC;
unsigned int rng61()
{
	SA ^= SA &lt;&lt; 16;
	SA ^= SA &gt;&gt; 5;
	SA ^= SA &lt;&lt; 1;
	unsigned int t = SA;
	SA = SB;
	SB = SC;
	SC ^= t ^ SA;
	return SC;
}
const int N = 5e6 + 9;
int main()
{
	for (scanf("%d", &amp;t); t--;)
	{
		scanf("%d%d%d%d%u%u%u", &amp;n, &amp;p, &amp;q, &amp;m, &amp;SA, &amp;SB, &amp;SC);
		vector&lt;pair&lt;int, int&gt;&gt; vs, ms;
		llu ans = 0;
		for (llu i = 1; i &lt;= n; ++i)
		{
			if (rng61() % (p + q) &lt; p)
			{
				vs.emplace_back(rng61() % m + 1, i);
				if (ms.empty() || vs.back() &gt; ms.back())
					ms.push_back(vs.back());
			}
			else if (!vs.empty())
			{
				if (ms.back().second == vs.back().second)
					ms.pop_back();
				vs.pop_back();
			}
			if (!ms.empty())
				ans ^= i * ms.back().first;
		}
		printf("Case #%d: %llu\n", ++kase, ans);
	}
}
</code></pre>

<h2 id="rolling-the-polygon"><a href="https://vjudge.net/problem/Gym-102222B">Rolling The Polygon</a></h2>

<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
struct Point
{
	double x, y;
} p[2000];
int n, t;
double qa, qb;
int main(void)
{
	cin &gt;&gt; t;
	for (int i = 1; i &lt;= t; i++)
	{
		cin &gt;&gt; n;
		double ans = 0;
		for (int i = 0; i &lt; n; i++)
			cin &gt;&gt; p[i].x &gt;&gt; p[i].y;
		cin &gt;&gt; qa &gt;&gt; qb;
		for (int i = 0; i &lt; n; i++)
		{
			double dis = sqrt((qa - p[i].x) * (qa - p[i].x) + (qb - p[i].y) * (qb - p[i].y));
			double arc = acos(((p[i].x - p[(i + n - 1) % n].x) * (p[(i + 1) % n].x - p[i].x) + (p[i].y - p[(i + n - 1) % n].y) * (p[(i + 1) % n].y - p[i].y)) / sqrt((p[i].x - p[(i + n - 1) % n].x) * (p[i].x - p[(i + n - 1) % n].x) + (p[i].y - p[(i + n - 1) % n].y) * (p[i].y - p[(i + n - 1) % n].y)) / sqrt((p[(i + 1) % n].x - p[i].x) * (p[(i + 1) % n].x - p[i].x) + (p[(i + 1) % n].y - p[i].y) * (p[(i + 1) % n].y - p[i].y)));
			ans += dis * arc;
		}
		printf("Case #%d: %.3f\n", i, ans);
	}
}
</code></pre>

<h2 id="caesar-cipher"><a href="https://vjudge.net/problem/Gym-102222C">Caesar Cipher</a></h2>

<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
#define ll long long
using namespace std;
int t, n, m, q;
char s[100], s2[100], s3[100];
int main(void)
{
	cin &gt;&gt; t;
	for (int i = 1; i &lt;= t; i++)
	{
		cin &gt;&gt; n &gt;&gt; m;
		cin &gt;&gt; s &gt;&gt; s2 &gt;&gt; s3;
		q = (s2[0] - s[0] + 26) % 26;
		for (int i = 0; i &lt; m; i++)
			s3[i] = (s3[i] - q - 'A' + 26) % 26 + 'A';
		cout &lt;&lt; "Case #" &lt;&lt; i &lt;&lt; ": " &lt;&lt; s3 &lt;&lt; "\n";
	}
}
</code></pre>

<h2 id="take-your-seat"><a href="https://vjudge.net/problem/Gym-102222D">Take Your Seat</a></h2>

<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
const int N = 127;
double f[N] = {0, 1}, g[N];
int main()
{
	for (int i = 2; i &lt;= 50; ++i)
	{
		for (int j = 1; j &lt; i; ++j)
			f[i] += f[j];
		f[i] /= i;
	}
	for (int i = 1; i &lt;= 50; ++i)
	{
		for (int j = 1; j &lt;= i; ++j)
			g[i] += f[j];
		g[i] /= i;
	}
	int t, n, m;
	scanf("%d", &amp;t);
	for (int i = 1; i &lt;= t; ++i)
	{
		scanf("%d%d", &amp;n, &amp;m);
		printf("Case #%d: %.6f %.6f\n", i, f[n], g[m]);
	}
}
</code></pre>

<h2 id="moving-on"><a href="https://vjudge.net/problem/Gym-102222F">Moving On</a></h2>

<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
typedef int ll;
const int N = 255;
typedef array&lt;array&lt;ll, N&gt;, N&gt; Matrix;
pair&lt;ll, int&gt; p[N];
void floyed(Matrix &amp;f, int n, int pos, int &amp;k)
{
	for (; k &lt; n; ++k)
	{
		if (p[k] &gt; p[pos])
			break;
		for (int i = 0; i &lt; n; ++i)
			for (int j = 0; j &lt; n; ++j)
				f[i][j] = min(f[i][j], f[i][p[k].second] + f[p[k].second][j]);
	}
}
Matrix f[N];
int t, n, q, kase;
int main()
{
	for (scanf("%d", &amp;t); t--;)
	{
		scanf("%d%d", &amp;n, &amp;q);
		for (int i = 0; i &lt; n; ++i)
			scanf("%d", &amp;p[i].first), p[i].second = i;
		sort(p, p + n);
		for (int i = 0; i &lt; n; ++i)
			for (int j = 0; j &lt; n; ++j)
				scanf("%d", &amp;f[0][i][j]);
		for (int i = 0, k = 0; i &lt; n; ++i)
			floyed(f[i + 1] = f[i], n, i, k);
		printf("Case #%d:\n", ++kase);
		for (int i = 0, u, v, w; i &lt; q; ++i)
		{
			scanf("%d%d%d", &amp;u, &amp;v, &amp;w);
			printf("%d\n", f[upper_bound(p, p + n, make_pair(w, n)) - p][u - 1][v - 1]);
		}
	}
}
</code></pre>

<h2 id="fight-against-monsters"><a href="https://vjudge.net/problem/Gym-102222H">Fight Against Monsters</a></h2>

<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
typedef long long ll;
int t, kase, n;
void cal(int &amp;x)
{
	for (int i = max((int)sqrt(x &lt;&lt; 1) - 3, 1);; ++i)
		if (i * (i + 1) / 2 &gt;= x)
		{
			x = i;
			return;
		}
}
bool cmp(const pair&lt;int, int&gt; &amp;lhs, const pair&lt;int, int&gt; &amp;rhs)
{
	return 1LL * lhs.first * rhs.second &lt; 1LL * lhs.second * rhs.first;
}
int main()
{
	for (scanf("%d", &amp;t); t--;)
	{
		scanf("%d", &amp;n);
		vector&lt;pair&lt;int, int&gt;&gt; v(n);
		vector&lt;ll&gt; sum(n + 1, 0);
		for (int i = 0; i &lt; n; ++i)
		{
			scanf("%d%d", &amp;v[i].second, &amp;v[i].first);
			cal(v[i].second);
		}
		sort(v.begin(), v.end(), cmp);
		for (int i = 0; i &lt; v.size(); ++i)
			sum[i + 1] = sum[i] + v[i].first;
		ll ans = 0;
		for (int i = v.size() - 1; ~i; --i)
			ans += sum[i + 1] * v[i].second;
		printf("Case #%d: %lld\n", ++kase, ans);
	}
}
</code></pre>
:ET