I"	<h4 id="一什么是cookie和session">一、什么是cookie和session</h4>

<ol>
  <li>
    <p>什么是cookie</p>

    <p>cookie是由服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器</p>

    <p>下次向同一个服务器再发送请求时携带并发送到服务器上。通常，它用于告知服务端</p>

    <p>两个请求是否来自同一个浏览器，如保持用户的状态。cookie使得基于无状态的HTTP</p>

    <p>协议记录稳定状态信息成为了可能。</p>

    <p>cookie主要用于一下三个方面:</p>

    <ul>
      <li>
        <p>会话状态管理(如用户登陆状态)</p>
      </li>
      <li>
        <p>个性化设置(如用户自定义状态)</p>
      </li>
      <li>
        <p>浏览器行为跟踪(如跟踪分析用户行为等)</p>
      </li>
    </ul>
  </li>
  <li>
    <p>什么是session</p>

    <p>session代表着服务端与客户端一次会话的过程。session对象存储特定用户会话所需的属性和配置。</p>

    <p>这样，当用户在应用程序的web页之间跳转时，存储在session对象中的变量将不会消失，而是在整个</p>

    <p>用户会话中一直存在下去。当客户端关闭会话，或者session超时失效时会话结束。</p>
  </li>
</ol>

<h4 id="二cookie和session的区别">二、cookie和session的区别</h4>

<ul>
  <li>作用范围不同: cookie保存在客户端，而session保存在服务端</li>
  <li>有效期不同: cookie可以设置为长时间保持，比如我们经常使用的
默认登陆功能，而session一般失效时间较短，客户端关闭或者session
超时都会失效</li>
  <li>安全性不同: cookie保存在客户端，容易遭到不法窃取和篡改,session保存在
服务端，安全性较好</li>
  <li>存储大小不同：单个cookie保存的数据不能超过4k，session保存的数据大小更大</li>
</ul>

<h4 id="三cookie和session的使用机制">三、cookie和session的使用机制</h4>

<p>我们都知道HTTP是无状态协议，这意味着服务端并不知道是张三还是李四在跟它打交道。</p>

<p>这个时候就需要一个机制来告诉服务端，本次操作用户是否</p>

<h4 id="参考">参考</h4>

<ul>
  <li>https://juejin.im/post/5cd9037ee51d456e5c5babca</li>
</ul>

:ET