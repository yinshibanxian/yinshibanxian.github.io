I";<h2 id="分布式系统案例">分布式系统案例</h2>

<ul>
  <li>局域网络</li>
  <li>Tair分布式数据库架构</li>
  <li>Elasticsearch 搜索集群</li>
  <li>边缘计算</li>
  <li>大规模深度学习系统</li>
</ul>

<h2 id="产生背景">产生背景</h2>

<p>计算机的小型化以及计算性能的提升</p>

<p>Enslow的系统设计模型</p>

<h2 id="发展趋势">发展趋势</h2>

<ul>
  <li>2005年前：封闭集中的IT基础设施</li>
  <li>今天：开放集中的云环境</li>
  <li>2020年以后： 开放分布式的普适计算环境</li>
</ul>

<h2 id="定义">定义</h2>

<p>分布式系统是若干独立自主计算机的集合，这些计算机对于用于来说像是单个 耦合系统。</p>

<p>物理分布，逻辑集中，个体独立，整体统一</p>

<h3 id="特性">特性</h3>

<ul>
  <li>构成组件并被所有用户共享；</li>
  <li>系统资源可能不允许访问；</li>
  <li>软件运行在不同处理器上的多个并发进程上；</li>
  <li>允许多点控制；</li>
  <li>允许多点失效</li>
</ul>

<h4 id="集中式系统特性">集中式系统特性</h4>

<ul>
  <li>仅由单个组件构成；</li>
  <li>单个组件被用户一直占用；</li>
  <li>所有的资源都是可访问的；</li>
  <li>软件运行在单个进程中；</li>
  <li>单点控制；</li>
  <li>单点失效；</li>
</ul>

<h4 id="自主性">自主性</h4>

<p>计算节点硬件或者软件进程是独立的；</p>

<h4 id="耦合性">耦合性</h4>

<p>用户或者应用程序感觉系统是一个系统——节点之间需要相互协作；</p>

<h3 id="八大谬论">八大谬论</h3>

<ol>
  <li>网络可靠。 The network is reliable.</li>
  <li>延迟为零。 Latency is zero.</li>
  <li>带宽是无限的。 Bandwidth is infinite.</li>
  <li>网络是安全的。 The network is secure.</li>
  <li>拓扑不会改变。 Topology doesn’t change.</li>
  <li>只有一个管理员。 There is one administrator.</li>
  <li>运输成本为零。 Transport cost is zero.</li>
  <li>网络是同质的。The network is homogeneous.</li>
</ol>

<h3 id="自主节点集合">自主节点集合</h3>

<h4 id="节点独立行为">节点独立行为</h4>

<ul>
  <li>每个节点都是独立的，有自己的本地时间；</li>
  <li>没有全局锁；</li>
  <li>存在基本的同步和协同的问题；</li>
</ul>

<h4 id="节点集合行为">节点集合行为</h4>

<ul>
  <li>如何管理集合中的节点之间的关系？— 开放集合、封闭集合；</li>
  <li>如何知道确实是在跟一个授权（非授权的）成员通信？ — 信任、安全机制</li>
</ul>

<h3 id="节点间的组织形式">节点间的组织形式</h3>

<h4 id="覆盖网络overlay-network">覆盖网络（Overlay network）</h4>

<ul>
  <li>实践表明覆盖网络最为常用</li>
  <li>每个节点仅和邻居节点通信</li>
  <li>邻居节点是动态的甚至只能通过查询获得</li>
</ul>

<h4 id="覆盖网络类型">覆盖网络类型</h4>

<ul>
  <li>P2P网络（Peer-toPeer）</li>
  <li>结构型的P2P网：节点之间的连接具有特定规则的结构</li>
  <li>非结构性的P2P网络：节点之间的连接具有随机和任意性；</li>
</ul>

<h3 id="一致coherent系统">一致(Coherent)系统</h3>

<h4 id="本质">本质</h4>

<p>节点无论在什么地方，用户无论何时访问，节点集合对于 用户来讲是一个整体；</p>

<h4 id="挑战">挑战</h4>

<p>部分失效： 不可避免地，分布式系统的某一部分会失效， 部分失效以及恢复很难做到对用户的透明性</p>

<h4 id="例子">例子</h4>

<ul>
  <li>终端用户不知道计算发生在什么地方；</li>
  <li>用户也不知道与应用相关的数据存储在什么地方；</li>
  <li>数据拷贝完全是隐藏的；（核心是分布式透明性）</li>
</ul>

<h3 id="分布式系统的目标">分布式系统的目标</h3>

<h4 id="使资源可访问">使资源可访问</h4>

<p>让用户方便地访问资源</p>

<h4 id="透明性">透明性</h4>

<p>隐藏资源在网络上的分布，隐藏进程和资源在多台计算机上分布这一事实</p>

<h5 id="透明的类型">透明的类型</h5>

<table>
  <thead>
    <tr>
      <th>透明性</th>
      <th>说明</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>访问</td>
      <td>隐藏数据表示形式的不同以及资源访问方式的不同</td>
    </tr>
    <tr>
      <td>位置</td>
      <td>隐藏资源所在位置</td>
    </tr>
    <tr>
      <td>迁移</td>
      <td>异常资源是否移动到另一个位置</td>
    </tr>
    <tr>
      <td>重定位</td>
      <td>隐藏资源是否在使用过程中移动到另一个位置</td>
    </tr>
    <tr>
      <td>复制</td>
      <td>隐藏是否对资源进行复制</td>
    </tr>
    <tr>
      <td>并发</td>
      <td>隐藏资源是否由相互竞争的用户共享</td>
    </tr>
    <tr>
      <td>故障</td>
      <td>隐藏资源的故障和恢复</td>
    </tr>
    <tr>
      <td>持久化</td>
      <td>隐藏数据在主存和磁盘这一事实</td>
    </tr>
  </tbody>
</table>

<h5 id="观点">观点</h5>

<p>完全透明性是不可取的也是难以实现的，主要因为：</p>

<ul>
  <li>可能隐含通信的性能问题</li>
  <li>完全隐藏网络和节点的失效是不可能的；
    <ul>
      <li>不能区分失效和性能变慢的节点；</li>
      <li>不能确定系统失效之前的操作是什么</li>
    </ul>
  </li>
  <li>完全的透明性可能牺牲性能，暴露系统分布特征</li>
  <li>保证复制节点与主节点的一致性需要时间（一致性问题）</li>
  <li>为了容错需要立即将内存修改的内容同步到磁盘上；</li>
</ul>

<h4 id="开放性">开放性</h4>

<p>访问接口的标准化</p>

<h4 id="可扩展性">可扩展性</h4>

<p>系统在规模、地域、管理上的可扩展性</p>
:ET