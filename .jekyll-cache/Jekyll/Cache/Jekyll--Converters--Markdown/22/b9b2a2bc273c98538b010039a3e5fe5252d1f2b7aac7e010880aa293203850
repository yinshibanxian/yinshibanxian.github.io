I"<h2 id="land-of-farms"><a href="https://vjudge.net/problem/HDU-5556">Land of Farms</a></h2>

<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
const int N = 15;
char s[N][N];
int t, n, m, kase, ans, cnt[N], a[N][N];
struct Hungary
{
#define N 127
	vector&lt;int&gt; g[N];
	int n, fl[N], fr[N], vr[N];
	int dfs(int x, int rt)
	{
		for (auto y : g[x])
			if (vr[y] != rt)
				if (vr[y] = rt, fr[y] == N || dfs(fr[y], rt))
					return fl[fr[y] = x] = y, 1;
		return 0;
	}
	void ask()
	{
		fill(fl, fl + n, N), fill(fr, fr + n, N), fill(vr, vr + n, N);
		for (int i = 0; i &lt; n; ++i)
			if (fl[i] == N)
				dfs(i, i);
	}
#undef N
} h;
bool ok(int x, int y, int cur)
{
	if (!(0 &lt;= x &amp;&amp; x &lt; n &amp;&amp; 0 &lt;= y &amp;&amp; y &lt; m))
		return 0;
	if (isdigit(s[x][y]))
		return 0;
	if (x &amp;&amp; isdigit(s[x - 1][y]) &amp;&amp; (cur &amp; (1 &lt;&lt; s[x - 1][y] - '0')))
		return 0;
	if (x &lt; n - 1 &amp;&amp; isdigit(s[x + 1][y]) &amp;&amp; (cur &amp; (1 &lt;&lt; s[x + 1][y] - '0')))
		return 0;
	if (y &amp;&amp; isdigit(s[x][y - 1]) &amp;&amp; (cur &amp; (1 &lt;&lt; s[x][y - 1] - '0')))
		return 0;
	if (y &lt; m - 1 &amp;&amp; isdigit(s[x][y + 1]) &amp;&amp; (cur &amp; (1 &lt;&lt; s[x][y + 1] - '0')))
		return 0;
	return 1;
}
void dfs(int k, int cur, int cont)
{
	if (k &gt; 9)
	{
		for (int x = 0; x &lt; n; ++x)
			for (int y = 0; y &lt; m; ++y)
			{
				h.g[x * m + y].clear();
				if (ok(x, y, cur))
				{
					++cont;
					if (ok(x - 1, y, cur))
						h.g[x * m + y].push_back((x - 1) * m + y);
					if (ok(x + 1, y, cur))
						h.g[x * m + y].push_back((x + 1) * m + y);
					if (ok(x, y - 1, cur))
						h.g[x * m + y].push_back(x * m + y - 1);
					if (ok(x, y + 1, cur))
						h.g[x * m + y].push_back(x * m + y + 1);
				}
			}
		h.n = n * m;
		h.ask();
		int c = 0;
		for (int i = 0; i &lt; h.n; ++i)
			if (0 &lt;= h.fl[i] &amp;&amp; h.fl[i] &lt; h.n)
				++c;
		ans = max(ans, cont - (c &gt;&gt; 1));
		return;
	}
	dfs(k + 1, cur, cont);
	if (!cnt[k])
		return;
	for (int i = 0; i &lt; k; ++i)
		if (a[i][k] &amp;&amp; (cur &amp; (1 &lt;&lt; i)))
			return;
	dfs(k + 1, cur | (1 &lt;&lt; k), cont + 1);
}
int main()
{
	for (scanf("%d", &amp;t); t--;)
	{
		scanf("%d%d", &amp;n, &amp;m);
		fill(cnt, cnt + N, 0);
		for (int i = 0; i &lt; N; ++i)
			fill(a[i], a[i] + N, 0);
		for (int i = 0; i &lt; n; ++i)
		{
			scanf("%s", s[i]);
			for (int j = 0; j &lt; m; ++j)
				if (isdigit(s[i][j]))
				{
					++cnt[s[i][j] - '0'];
					if (j &amp;&amp; isdigit(s[i][j - 1]))
						a[s[i][j] - '0'][s[i][j - 1] - '0'] = a[s[i][j - 1] - '0'][s[i][j] - '0'] = 1;
					if (i &amp;&amp; isdigit(s[i - 1][j]))
						a[s[i][j] - '0'][s[i - 1][j] - '0'] = a[s[i - 1][j] - '0'][s[i][j] - '0'] = 1;
				}
		}
		dfs(0, 0, ans = 0);
		printf("Case #%d: %d\n", ++kase, ans);
	}
}
</code></pre>

<h2 id="frog-and-string"><a href="https://vjudge.net/problem/HDU-5559">Frog and String</a></h2>

<p>蛤。</p>

<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
int T, n, m, k;
int main()
{
	scanf("%d", &amp;T);
	for (int t = 1; t &lt;= T; t++)
	{
		scanf("%d%d%d", &amp;n, &amp;m, &amp;k);
		printf("Case #%d:\n", t);
		if (n == 8 &amp;&amp; m == 7 &amp;&amp; k == 2)
		{
			printf("AABBABAA\n");
			continue;
		}
		if (m &gt; n)
			printf("Impossible\n");
		else if (k == 1 || n == m)
		{
			if (n == m)
				for (int i = 1; i &lt;= n; i++)
					printf("A");
			else
				printf("Impossible");
			printf("\n");
		}
		else if (k &gt;= 3)
		{
			if (m &lt; 3)
				printf("Impossible");
			else
			{
				for (int i = 1; i &lt;= m - 3; i++)
					printf("A");
				int now = 0;
				for (int i = m - 2; i &lt;= n; i++)
				{
					if (now == 0)
						printf("A");
					if (now == 1)
						printf("B");
					if (now == 2)
						printf("C");
					now = (now + 1) % 3;
				}
			}
			printf("\n");
		}
		else if (k == 2)
		{
			if (m &gt;= 8)
			{
				for (int i = 1; i &lt;= m - 8; i++)
					printf("A");
				int now = 0;
				for (int i = m - 7; i &lt;= n; i++)
				{
					if (now == 0)
						printf("A");
					if (now == 1)
						printf("B");
					if (now == 2)
						printf("A");
					if (now == 3)
						printf("A");
					if (now == 4)
						printf("B");
					if (now == 5)
						printf("B");
					now = (now + 1) % 6;
				}
			}
			else
				printf("Impossible");
			printf("\n");
		}
	}
}
</code></pre>
:ET