I"9<h1 id="gennady-and-a-card-game"><a href="https://vjudge.net/problem/CodeForces-1097A">Gennady and a Card Game</a></h1>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
char t[9], s[9];
int main()
{
	for (scanf("%s", t); ~scanf("%s", s);)
		if (s[0] == t[0] || s[1] == t[1])
			return printf("YES"), 0;
	printf("NO");
}
</code></pre>
<h1 id="petr-and-a-combination-lock"><a href="https://vjudge.net/problem/CodeForces-1097B">Petr and a Combination Lock</a></h1>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
int n, a[15];
int main()
{
	scanf("%d", &amp;n);
	for (int i = 0; i &lt; n; ++i)
		scanf("%d", &amp;a[i]);
	for (int i = (1 &lt;&lt; n) - 1, sum; ~i; --i)
	{
		for (int j = sum = 0; j &lt; n; ++j)
			sum += (i &amp; 1 &lt;&lt; j) ? -a[j] : a[j];
		if (sum % 360 == 0)
			return printf("YES"), 0;
	}
	printf("NO");
}
</code></pre>
<h1 id="yuhao-and-a-parenthesis"><a href="https://vjudge.net/problem/CodeForces-1097C">Yuhao and a Parenthesis</a></h1>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
const int N = 5e5 + 5;
char s[N], t[N];
int n, cnt[N &lt;&lt; 1];
int main()
{
	scanf("%d", &amp;n);
	for (int i = 0, c[2]; i &lt; n; ++i)
	{
		scanf("%s", s);
		for (int i = c[0] = c[1] = 0, siz = 0; s[i]; ++i)
		{
			if (siz &amp;&amp; t[siz - 1] == '(' &amp;&amp; s[i] == ')')
				--c[0], --siz;
			else
				++c[s[i] == ')'], t[siz++] = s[i];
		}
		if (!c[0] || !c[1])
			++cnt[N - c[0] + c[1]];
	}
	for (int i = n = 0; i &lt; N; ++i)
		n += min(cnt[N - i], cnt[N + i]);
	printf("%d", n + cnt[N] / 2 - cnt[N]);
}
</code></pre>
<h1 id="makoto-and-a-blackboard"><a href="https://vjudge.net/problem/CodeForces-1097D">Makoto and a Blackboard</a></h1>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
#define FI first
#define SE second
using namespace std;
typedef long long ll;
struct Mod
{
	const ll M;
	Mod(ll M) : M(M) {}
	ll add(ll a, ll b) const { return ((a + b) % M + M) % M; }
	ll mul(ll a, ll b) const { return a * b % M; }
	ll pow(ll a, ll b) const
	{
		ll r = 1;
		for (a %= M; b; b &gt;&gt;= 1, a = mul(a, a))
			if (b &amp; 1)
				r = mul(r, a);
		return r;
	}
	ll inv(ll a) const { return pow(a, M - 2); }
} M(1e9 + 7);
ll n, k, ans;
int main()
{
	scanf("%lld%lld", &amp;n, &amp;k);
	vector&lt;pair&lt;ll, ll&gt;&gt; v;
	ans = n;
	for (ll i = 2; i * i &lt;= n; ++i)
		if (ans % i == 0)
			for (v.push_back({i, 0}); ans % i == 0; ans /= i)
				++v.back().SE;
	if (ans &gt; 1)
		v.push_back({ans, 1}), ans = 1;
	for (auto it : v)
	{
		vector&lt;ll&gt; sum(it.SE + 1, 0);
		sum[it.SE] = 1;
		for (ll j = 0; j &lt; k; ++j)
		{
			vector&lt;ll&gt; f(it.SE + 1, 0);
			for (ll i = 1; i &lt;= it.SE; ++i)
				f[0] = M.add(f[0], f[i] = M.mul(sum[i - 1], M.inv(i)));
			sum[0] = M.add(f[0], M.mul(sum[it.SE], M.inv(it.SE + 1)));
			for (ll i = 1; i &lt;= it.SE; ++i)
				sum[i] = M.add(sum[i - 1], -f[i]);
		}
		ll res = sum[0];
		for (ll i = 1, p = 1; i &lt;= it.SE; ++i)
			res = M.add(res, M.mul(p = M.mul(p, it.FI), sum[i]));
		ans = M.mul(ans, res);
	}
	printf("%lld", ans);
}
</code></pre>
:ET