I"S<h2 id="three-arrays"><a href="https://vjudge.net/problem/HDU-6625">three arrays</a></h2>

<p>Trie+贪心。</p>

<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
const int NPOS = -1;
struct Trie
{
	struct Node
	{
		int cnt, ch[2];
	};
	vector&lt;Node&gt; v;
	Trie() : v(1, Node{0, {NPOS, NPOS}}) {}
	void add(int x)
	{
		for (int rt = 0, i = 29; ~i; --i)
		{
			int nxt = x &gt;&gt; i &amp; 1;
			if (v[rt].ch[nxt] == NPOS)
			{
				v[rt].ch[nxt] = v.size();
				v.push_back(Node{0, {NPOS, NPOS}});
			}
			rt = v[rt].ch[nxt];
			++v[rt].cnt;
		}
	}
};
int main()
{
	int t, n;
	for (scanf("%d", &amp;t); t--;)
	{
		scanf("%d", &amp;n);
		Trie t[2];
		for (int j = 0; j &lt; 2; ++j)
			for (int i = 0, x; i &lt; n; ++i)
				scanf("%d", &amp;x), t[j].add(x);
		vector&lt;int&gt; ans;
		for (int i = 0, val; i &lt; n; ++i)
		{
			for (int rt[2] = {val = 0, 0}, i = 29; ~i; --i)
			{
#define OK(i, j) (t[i].v[rt[i]].ch[j] != NPOS &amp;&amp; t[i].v[t[i].v[rt[i]].ch[j]].cnt)
				if (OK(0, 1) &amp;&amp; OK(1, 1))
					rt[0] = t[0].v[rt[0]].ch[1], rt[1] = t[1].v[rt[1]].ch[1], val &lt;&lt;= 1;
				else if (OK(0, 0) &amp;&amp; OK(1, 0))
					rt[0] = t[0].v[rt[0]].ch[0], rt[1] = t[1].v[rt[1]].ch[0], val &lt;&lt;= 1;
				else if (OK(0, 1) &amp;&amp; OK(1, 0))
					rt[0] = t[0].v[rt[0]].ch[1], rt[1] = t[1].v[rt[1]].ch[0], val = val &lt;&lt; 1 | 1;
				else
					rt[0] = t[0].v[rt[0]].ch[0], rt[1] = t[1].v[rt[1]].ch[1], val = val &lt;&lt; 1 | 1;
				--t[0].v[rt[0]].cnt, --t[1].v[rt[1]].cnt;
			}
			ans.push_back(val);
		}
		sort(ans.begin(), ans.end());
		for (int i = 0; i &lt; ans.size(); ++i)
			printf("%d%c", ans[i], i + 1 &lt; ans.size() ? ' ' : '\n');
	}
}
</code></pre>

<h2 id="permutation-1"><a href="https://vjudge.net/problem/HDU-6628">permutation 1</a></h2>

<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;vector&gt;
#include&lt;algorithm&gt;
#include&lt;string.h&gt;
using namespace std;
int n,k,l,t;
struct tem{
	int a[30];
	int size;
	tem():size(0){}
};
tem p,q[1000000];
bool ed[100];
bool operator&lt;(const tem&amp; p,const tem&amp; q){
	if(n&gt;=9)if(p.a[0]!=q.a[0])return p.a[0]&lt;q.a[0];
	for(int i=1;i&lt;p.size;i++){
		if(p.a[i]-p.a[i-1]==q.a[i]-q.a[i-1])continue;
		return p.a[i]-p.a[i-1]&lt;q.a[i]-q.a[i-1];
	}
}

void dfs(tem p){

	if(p.size&gt;=min(n,8)){
		q[++l]=p;
	//	cout&lt;&lt;l&lt;&lt;endl;
		return;
	}
	for(int i=1;i&lt;=n;i++){
		if(!ed[i]){
			p.a[p.size++]=i;
			ed[i]=1;
			dfs(p);
			p.size--;
			ed[i]=0;
		}
	}
}

int main(void){
	cin&gt;&gt;t;
	while(t--){
	cin&gt;&gt;n&gt;&gt;k;
	l=0;
	memset(ed,0,sizeof(ed));
	if(n&gt;8){
	ed[n]=1;
	cout&lt;&lt;n&lt;&lt;" ";
	for(int i=1;i&lt;n-8;i++){
		ed[i]=1;
		cout&lt;&lt;i&lt;&lt;" ";
	}}
	dfs(p);
	sort(q+1,q+l+1);
	for(int i=0;i&lt;q[k].size-1;i++){
		cout&lt;&lt;q[k].a[i]&lt;&lt;" ";
 }
 cout&lt;&lt;q[k].a[q[k].size-1]&lt;&lt;endl;

}}
</code></pre>

<h2 id="string-matching"><a href="https://vjudge.net/problem/HDU-6629">string matching</a></h2>

<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
typedef long long LL;

const int maxn=1e6+10;
int T;
int ne[maxn];
char ch[maxn];

int main()
{
	scanf("%d",&amp;T);
	while (T--)
	{
		scanf("%s",ch);
		int L=strlen(ch);

		int j=0,p=0;
		ne[0]=L;
		for (int i=1;i&lt;L;i++)
		{
			if (i&gt;=j || i+ne[i-p]&gt;=j)
			{
				if (i&gt;=j) j=i;
				while (j&lt;L &amp;&amp; ch[j]==ch[j-i]) j++;
				ne[i]=j-i;
				p=i;
			}
			else ne[i]=ne[i-p];
		}

		LL ans=0;
		for (int i=1;i&lt;L;i++)
		{
			ans+=(LL)ne[i];
			if (i+ne[i]&lt;L) ans++;

		}
		printf("%lld\n",ans);
	}

	return 0;
}
</code></pre>

<h2 id="permutation-2"><a href="https://vjudge.net/problem/HDU-6630">permutation 2</a></h2>

<pre><code class="language-cpp">#include&lt;iostream&gt;
using namespace std;
int f[500006]={0,1,1,1},t,n,a,b;
int main(void){
	cin&gt;&gt;t;
	for(int i=4;i&lt;=100000;i++)f[i]=f[i-1]+f[i-3],f[i]%=998244353;
	while(t--){
		cin&gt;&gt;n&gt;&gt;a&gt;&gt;b;
		if(a&gt;b)swap(a,b);
		if(a!=1&amp;&amp;b!=n)cout&lt;&lt;f[b-a-1]&lt;&lt;endl;
		else if(a==1&amp;&amp;b==n)cout&lt;&lt;f[n]&lt;&lt;endl;
		else cout&lt;&lt;f[b-a]&lt;&lt;endl;
	}
}
</code></pre>
:ET