I"I<h1 id="asteroids"><a href="https://vjudge.net/problem/UVALive-4589">Asteroids</a></h1>
<p>模板题，求两空间多面体重心最近的距离，将重心到所在凸包表面的最短距离相加即可。
蓝书上的原题，详见<a href="http://wu-kan.github.io/posts/35776/">这里</a>。</p>
<h1 id="business-center"><a href="https://vjudge.net/problem/UVALive-4590">Business Center</a></h1>
<pre><code class="language-cpp">#include &lt;cstdio&gt;
#include &lt;cstdlib&gt;
#include &lt;algorithm&gt;

using namespace std;

int n,m;

int main()
{
	while (~scanf("%d%d",&amp;n,&amp;m))
	{
	int ans=1000000001;
	for (int i=1;i&lt;=m;++i)
	{
		int x,y;
		scanf("%d%d",&amp;x,&amp;y);
		int ret=(x*n)%(x+y);
		if (ret==0) ret=x+y;
		ans=min(ans,ret);
	}
	printf("%d\n",ans);
	}
}
</code></pre>
<h1 id="database"><a href="https://vjudge.net/problem/UVALive-4592">Database</a></h1>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
int main()
{
	for(int n,m,f; cin&gt;&gt;n&gt;&gt;m;)
	{
		unordered_map&lt;string,set&lt;int&gt; &gt; mp[15];
		string s;
		getline(cin,s);
		for(int i=f=1; i&lt;=n; ++i)
		{
			unordered_map&lt;int,int&gt; mmp;
			for(int j=1; j&lt;=m; ++j)
			{
				getline(cin,s,j&lt;m?',':'\n');
				if(!f)continue;
				for(auto it:mp[j][s])
				{
					if(mmp.count(it))
					{
						cout&lt;&lt;"NO\n"&lt;&lt;it&lt;&lt;' '&lt;&lt;i&lt;&lt;'\n'&lt;&lt;mmp[it]&lt;&lt;' '&lt;&lt;j&lt;&lt;'\n';
						f=0;
						break;
					}
					mmp[it]=j;
				}
				mp[j][s].insert(i);
			}
		}
		if(f)cout&lt;&lt;"YES\n";
	}
}
</code></pre>
<h1 id="funny-language"><a href="https://vjudge.net/problem/UVALive-4594">Funny Language</a></h1>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
void cal(const string &amp;s,int c[])
{
	fill(c,c+26,0);
	for(int i=0; i&lt;s.size(); ++i)++c[s[i]-'A'];
}
string s[1023];
int c[1023][31];
int main()
{
	for(int n,m; cin&gt;&gt;m&gt;&gt;n;)
	{
		for(int i=0; i&lt;n; ++i)
			cin&gt;&gt;s[i];
		sort(s,s+n);
		for(int i=0; i&lt;n; ++i)cal(s[i],c[i]);
		priority_queue&lt;pair&lt;int,string&gt; &gt; q;
		q.push(make_pair(0,""));
		while(m)
		{
			pair&lt;int,string&gt; pis=q.top();
			q.pop();
			auto rg=equal_range(s,s+n,pis.second);
			if(rg.first==rg.second&amp;&amp;!pis.second.empty())cout&lt;&lt;pis.second&lt;&lt;'\n',--m;
			cal(pis.second,c[n]);
			for(pis.second+='A'; pis.second.back()&lt;='Z'; ++pis.second.back())
			{
				++c[n][pis.second.back()-'A'];
				for(int i=pis.first=0; i&lt;n; ++i)
				{
					++pis.first;
					for(int j=0; j&lt;26; ++j)
						if(c[n][j]&gt;c[i][j])
						{
							--pis.first;
							break;
						}
				}
				q.push(pis);
				--c[n][pis.second.back()-'A'];
			}
		}
	}
}
</code></pre>
<h1 id="headshot"><a href="https://vjudge.net/problem/UVALive-4596">Headshot</a></h1>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
int main()
{
	for(string s; cin&gt;&gt;s;)
	{
		int a=s.size(),b=0,c=0,d=0;
		for(int i=0; i&lt;a; ++i)
			if(s[i]=='0')
				++b,++c,d+=s[(i+1)%a]=='0';
		printf(a*d&gt;b*c?"SHOOT\n":a*d&lt;b*c?"ROTATE\n":"EQUAL\n");
	}
}
</code></pre>
:ET