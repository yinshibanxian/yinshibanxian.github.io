I"ë<h1 id="problem-a-ascending-rating"><a href="https://vjudge.net/problem/HDU-6319">Problem A. Ascending Rating</a></h1>
<p>‰ªéÂêéÂêëÂâçÊâ´ÊèèÁª¥Êä§ÂΩìÂâç‰ΩçÁΩÆÂºÄÂßãÁöÑm‰∏™Âå∫Èó¥ÁöÑLIS„ÄÇ <br />
ÂÖ®Á®ã‰ΩøÁî® <code>long long</code> ÂáèÂ∞ëÂèñÊ®°Ê¨°Êï∞ÔºåÂê¶Âàô‰ºöT„ÄÇ</p>
<pre><code class="language-c">#include&lt;stdio.h&gt;
#define N 10000009
long long t,n,m,k,p,q,r,M,a[N],Q[N];
int main()
{
    for(scanf("%lld",&amp;t); t--;)
    {
        scanf("%lld%lld%lld%lld%lld%lld%lld",&amp;n,&amp;m,&amp;k,&amp;p,&amp;q,&amp;r,&amp;M);
        for(int i=1; i&lt;=k; ++i)scanf("%lld",&amp;a[i]);
        for(int i=k+1; i&lt;=n; ++i)a[i]=(p*a[i-1]+q*i+r)%M;
        for(int i=n,l=r=p=q=0; i; --i)
        {
            while(l&lt;r&amp;&amp;a[Q[r-1]]&lt;=a[i])--r;
            Q[r++]=i;
            if(i&lt;=n-m+1)
            {
                if(Q[l]-Q[r-1]+1&gt;m)++l;
                p+=i^a[Q[l]];
                q+=i^(r-l);
            }
        }
        printf("%lld %lld\n",p,q);
    }
}
</code></pre>
<h1 id="problem-c-dynamic-graph-matching"><a href="https://vjudge.net/problem/HDU-6321">Problem C. Dynamic Graph Matching</a></h1>
<pre><code class="language-cpp">#include &lt;cstdio&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
using namespace std;

const int maxv=3000;
const int mod=1e9+7;

int num[maxv],f[maxv];
int g[12][12];
int t,n,m,k,x,y,v;
char s[4];
int ans[10];

void init()
{
    for (int i=0;i&lt;1024;i++)
    {
        for (int j=0;j&lt;10;j++)
         if ((1&lt;&lt;j)&amp;i) num[i]++;
        if (num[i]&amp;1) num[i]=0;
         else num[i]/=2;
    }
}

int main()
{
    init();
    scanf("%d",&amp;t);
    while (t--)
    {
        memset(g,0,sizeof(g));
        memset(f,0,sizeof(f));
        f[0]=1;
        scanf("%d%d",&amp;n,&amp;m);
        k=n/2; v=(1&lt;&lt;n)-1;
        while (m--)
        {
            scanf("%s%d%d",s,&amp;x,&amp;y);
            if (s[0]=='+')
            {
                for (int i=0;i&lt;=v;i++)
                {
                    if (((1&lt;&lt;(x-1))&amp;i) &amp;&amp; ((1&lt;&lt;(y-1))&amp;i)) 
                      f[i]+=f[i-(1&lt;&lt;(x-1))-(1&lt;&lt;(y-1))]; 
                    f[i]%=mod;
                }
                g[x][y]++;
            }
            else
            {
                for (int i=0;i&lt;=v;i++)
                {
                    if (((1&lt;&lt;(x-1))&amp;i) &amp;&amp; ((1&lt;&lt;(y-1))&amp;i)) 
                     f[i]-=f[i-(1&lt;&lt;(x-1))-(1&lt;&lt;(y-1))];
                    if (f[i]&lt;0) f[i]+=mod;
                }
                g[x][y]--;
            }
        //  for (int i=1;i&lt;=v;i++) printf("%d ",f[i]);
        //  printf("\n");
            memset(ans,0,sizeof(ans));
            for (int i=1;i&lt;=v;i++) ans[num[i]]+=f[i],ans[num[i]]%=mod;
            for (int i=1;i&lt;k;i++) printf("%d ",ans[i]);
            printf("%d\n",ans[k]);
        }
    }
}
</code></pre>
<h1 id="problem-d-euler-function"><a href="https://vjudge.net/problem/HDU-6322">Problem D. Euler Function</a></h1>
<pre><code class="language-c">#include&lt;stdio.h&gt;
int t,k;
int main()
{
    for(scanf("%d",&amp;t); t--; printf("%d\n",k==1?5:k+5))
        scanf("%d",&amp;k);
}
</code></pre>
<h1 id="grab-the-tree"><a href="https://vjudge.net/problem/HDU-6324">Grab The Tree</a></h1>
<pre><code class="language-c">#include&lt;stdio.h&gt;
int t,n,s,w;
int main()
{
    for(scanf("%d",&amp;t); t--;)
    {
        scanf("%d",&amp;n);
        for(int i=s=0; i&lt;n; ++i)
            scanf("%d",&amp;w),s^=w;
        for(printf("%c\n",s?'Q':'D'); --n;)
            scanf("%d%d",&amp;s,&amp;w);
    }
}
</code></pre>
<h1 id="problem-l-visual-cube"><a href="https://vjudge.net/problem/HDU-6330">Problem L. Visual Cube</a></h1>
<pre><code class="language-c">#include&lt;stdio.h&gt;
char s[99][99];
int t,a,b,c;
int main()
{
    for(scanf("%d",&amp;t); t--;)
    {
        scanf("%d%d%d",&amp;a,&amp;b,&amp;c);
        for(int i=0; i&lt;(b+c)*2+1; ++i)
            for(int j=0; j&lt;(a+b)*2+1; ++j)
                s[i][j]='.';
        for(int i=0; i&lt;b; ++i)
        {
            for(int j=0; j&lt;a; ++j)
            {
                s[2*i][2*b-2*i+2*j]='+';
                s[2*i+1][2*b-2*i+2*j-1]='/';
                s[2*i][2*b-2*i+2*j+1]='-';
            }
            s[2*i][2*b-2*i+a*2]='+';
        }
        for(int i=0; i&lt;=c; ++i)
        {
            for(int j=0; j&lt;b; ++j)
            {
                s[2*i+2*b-2*j-1][2*a+2*j+1]='/';
                s[2*i+2*b-2*j-2][2*a+2*j+2]='+';
                if(i&lt;c)s[2*i+2*b-2*j-1][2*a+2*j+2]='|';
            }
            for(int j=0; j&lt;a; ++j)
            {
                if(i)s[2*i+2*b-1][j*2]='|';
                s[2*i+2*b][j*2]='+';
                s[2*i+2*b][j*2+1]='-';
            }
            s[2*i+2*b][2*a]='+';
            if(i)s[2*i+2*b-1][2*a]='|';
        }
        for(int i=0; i&lt;(b+c)*2+1; ++i,printf("\n"))
            for(int j=0; j&lt;(a+b)*2+1; ++j)
                printf("%c",s[i][j]);
    }
}
</code></pre>
:ET